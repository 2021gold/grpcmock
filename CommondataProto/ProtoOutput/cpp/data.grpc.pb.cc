// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: data.proto

#include "data.pb.h"
#include "data.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace commondata {

static const char* CommondataService_method_names[] = {
  "/commondata.CommondataService/GetSystemInfo",
  "/commondata.CommondataService/GetDisplaySetting",
  "/commondata.CommondataService/SetDisplaySetting",
  "/commondata.CommondataService/GetUserProfile",
  "/commondata.CommondataService/SetUserProfile",
};

std::unique_ptr< CommondataService::Stub> CommondataService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< CommondataService::Stub> stub(new CommondataService::Stub(channel, options));
  return stub;
}

CommondataService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_GetSystemInfo_(CommondataService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDisplaySetting_(CommondataService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDisplaySetting_(CommondataService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserProfile_(CommondataService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_SetUserProfile_(CommondataService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status CommondataService::Stub::GetSystemInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::commondata::SystemInfo* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::commondata::SystemInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSystemInfo_, context, request, response);
}

void CommondataService::Stub::async::GetSystemInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::commondata::SystemInfo* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::commondata::SystemInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSystemInfo_, context, request, response, std::move(f));
}

void CommondataService::Stub::async::GetSystemInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::commondata::SystemInfo* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSystemInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::commondata::SystemInfo>* CommondataService::Stub::PrepareAsyncGetSystemInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::commondata::SystemInfo, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSystemInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::commondata::SystemInfo>* CommondataService::Stub::AsyncGetSystemInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSystemInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CommondataService::Stub::GetDisplaySetting(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::commondata::DisplaySetting* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::commondata::DisplaySetting, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDisplaySetting_, context, request, response);
}

void CommondataService::Stub::async::GetDisplaySetting(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::commondata::DisplaySetting* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::commondata::DisplaySetting, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDisplaySetting_, context, request, response, std::move(f));
}

void CommondataService::Stub::async::GetDisplaySetting(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::commondata::DisplaySetting* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDisplaySetting_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::commondata::DisplaySetting>* CommondataService::Stub::PrepareAsyncGetDisplaySettingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::commondata::DisplaySetting, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDisplaySetting_, context, request);
}

::grpc::ClientAsyncResponseReader< ::commondata::DisplaySetting>* CommondataService::Stub::AsyncGetDisplaySettingRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDisplaySettingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status CommondataService::Stub::SetDisplaySetting(::grpc::ClientContext* context, const ::commondata::DisplaySetting& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::commondata::DisplaySetting, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SetDisplaySetting_, context, request, response);
}

void CommondataService::Stub::async::SetDisplaySetting(::grpc::ClientContext* context, const ::commondata::DisplaySetting* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::commondata::DisplaySetting, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetDisplaySetting_, context, request, response, std::move(f));
}

void CommondataService::Stub::async::SetDisplaySetting(::grpc::ClientContext* context, const ::commondata::DisplaySetting* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetDisplaySetting_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CommondataService::Stub::PrepareAsyncSetDisplaySettingRaw(::grpc::ClientContext* context, const ::commondata::DisplaySetting& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::commondata::DisplaySetting, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SetDisplaySetting_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CommondataService::Stub::AsyncSetDisplaySettingRaw(::grpc::ClientContext* context, const ::commondata::DisplaySetting& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSetDisplaySettingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::commondata::UserProfile>* CommondataService::Stub::GetUserProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
  return ::grpc::internal::ClientReaderFactory< ::commondata::UserProfile>::Create(channel_.get(), rpcmethod_GetUserProfile_, context, request);
}

void CommondataService::Stub::async::GetUserProfile(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::commondata::UserProfile>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::commondata::UserProfile>::Create(stub_->channel_.get(), stub_->rpcmethod_GetUserProfile_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::commondata::UserProfile>* CommondataService::Stub::AsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::commondata::UserProfile>::Create(channel_.get(), cq, rpcmethod_GetUserProfile_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::commondata::UserProfile>* CommondataService::Stub::PrepareAsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::commondata::UserProfile>::Create(channel_.get(), cq, rpcmethod_GetUserProfile_, context, request, false, nullptr);
}

::grpc::Status CommondataService::Stub::SetUserProfile(::grpc::ClientContext* context, const ::commondata::UserProfile& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::commondata::UserProfile, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SetUserProfile_, context, request, response);
}

void CommondataService::Stub::async::SetUserProfile(::grpc::ClientContext* context, const ::commondata::UserProfile* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::commondata::UserProfile, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetUserProfile_, context, request, response, std::move(f));
}

void CommondataService::Stub::async::SetUserProfile(::grpc::ClientContext* context, const ::commondata::UserProfile* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetUserProfile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CommondataService::Stub::PrepareAsyncSetUserProfileRaw(::grpc::ClientContext* context, const ::commondata::UserProfile& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::commondata::UserProfile, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SetUserProfile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* CommondataService::Stub::AsyncSetUserProfileRaw(::grpc::ClientContext* context, const ::commondata::UserProfile& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSetUserProfileRaw(context, request, cq);
  result->StartCall();
  return result;
}

CommondataService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CommondataService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CommondataService::Service, ::google::protobuf::Empty, ::commondata::SystemInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CommondataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::commondata::SystemInfo* resp) {
               return service->GetSystemInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CommondataService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CommondataService::Service, ::google::protobuf::Empty, ::commondata::DisplaySetting, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CommondataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::commondata::DisplaySetting* resp) {
               return service->GetDisplaySetting(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CommondataService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CommondataService::Service, ::commondata::DisplaySetting, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CommondataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::commondata::DisplaySetting* req,
             ::google::protobuf::Empty* resp) {
               return service->SetDisplaySetting(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CommondataService_method_names[3],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< CommondataService::Service, ::google::protobuf::Empty, ::commondata::UserProfile>(
          [](CommondataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::grpc::ServerWriter<::commondata::UserProfile>* writer) {
               return service->GetUserProfile(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      CommondataService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< CommondataService::Service, ::commondata::UserProfile, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](CommondataService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::commondata::UserProfile* req,
             ::google::protobuf::Empty* resp) {
               return service->SetUserProfile(ctx, req, resp);
             }, this)));
}

CommondataService::Service::~Service() {
}

::grpc::Status CommondataService::Service::GetSystemInfo(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::commondata::SystemInfo* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CommondataService::Service::GetDisplaySetting(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::commondata::DisplaySetting* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CommondataService::Service::SetDisplaySetting(::grpc::ServerContext* context, const ::commondata::DisplaySetting* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CommondataService::Service::GetUserProfile(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::commondata::UserProfile>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status CommondataService::Service::SetUserProfile(::grpc::ServerContext* context, const ::commondata::UserProfile* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace commondata

